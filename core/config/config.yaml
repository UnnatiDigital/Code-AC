# BMad-Method Universal AI Agent Framework - Core Platform Configuration

# Application Settings
app:
  name: "HMIS Core Platform"
  version: "1.0.0"
  environment: "development" # development, staging, production

# Server Configuration
server:
  address: ":8082"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  max_header_bytes: 1048576 # 1MB
  cors:
    allowed_origins:
      - "http://localhost:3000"
      - "http://localhost:3001"
      - "https://hmis.bmad-method.com"
    allowed_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allowed_headers:
      - "Content-Type"
      - "Authorization"
      - "X-Requested-With"
    allow_credentials: true
    max_age: 86400 # 24 hours

# Database Configuration
database:
  # For development without Docker, use SQLite
  driver: "sqlite3" # sqlite3, postgres
  sqlite:
    path: "./hmis_dev.db"
    max_open_conns: 1
    max_idle_conns: 1
    conn_max_lifetime: "5m"
    conn_max_idle_time: "1m"
  postgres:
    host: "localhost"
    port: "5432"
    user: "postgres"
    password: "root"
    name: "hmis"
    sslmode: "disable"
    max_open_conns: 25
    max_idle_conns: 5
    conn_max_lifetime: "5m"
    conn_max_idle_time: "1m"
  
  mongodb:
    uri: "mongodb://hmis_admin:hmis_password@localhost:27017/hmis_clinical"
    database: "hmis_clinical"
    max_pool_size: 100
    min_pool_size: 5
  
  redis:
    host: "localhost"
    port: 6379
    password: ""
    db: 0
    pool_size: 10
    min_idle_conns: 5
  
  clickhouse:
    host: "localhost"
    port: 9000
    user: "hmis_user"
    password: "hmis_password"
    database: "hmis_analytics"
    max_open_conns: 10
    max_idle_conns: 5

# Authentication & Security
auth:
  jwt:
    secret: "your-super-secret-jwt-key-change-in-production"
    expiration: "24h"
    refresh_expiration: "168h" # 7 days
  
  bcrypt:
    cost: 12
  
  session:
    secret: "your-super-secret-session-key"
    max_age: 86400 # 24 hours
  
  rate_limit:
    requests_per_minute: 100
    burst_size: 20

# Biometric Configuration
biometric:
  fingerprint:
    quality_threshold: 60 # NFIQ 2.0 standard
    max_retries: 3
    preferred_fingers: ["left_thumb", "right_thumb"]
  
  facial:
    liveness_check: true
    icao_compliance: true
    quality_threshold: 80
    max_retries: 3
  
  iris:
    quality_threshold: 70
    max_retries: 3
  
  storage:
    encryption_key: "your-biometric-encryption-key"
    compression: true
    retention_days: 2555 # 7 years

# Multilingual Support
i18n:
  default_language: "en"
  supported_languages:
    - "en" # English
    - "hi" # Hindi
    - "ta" # Tamil
    - "bn" # Bengali
    - "gu" # Gujarati
    - "mr" # Marathi
    - "te" # Telugu
    - "kn" # Kannada
    - "ml" # Malayalam
    - "pa" # Punjabi
  
  translation:
    provider: "google" # google, azure, aws
    api_key: "your-translation-api-key"
    confidence_threshold: 90
    cache_ttl: "24h"

# Integration Configuration
integration:
  abdm:
    base_url: "https://healthidsbx.abdm.gov.in"
    client_id: "your-abdm-client-id"
    client_secret: "your-abdm-client-secret"
    timeout: "30s"
  
  nhcx:
    base_url: "https://nhcx.abdm.gov.in"
    client_id: "your-nhcx-client-id"
    client_secret: "your-nhcx-client-secret"
    timeout: "30s"
  
  payment_gateways:
    razorpay:
      key_id: "your-razorpay-key-id"
      key_secret: "your-razorpay-key-secret"
      webhook_secret: "your-razorpay-webhook-secret"
    
    payu:
      merchant_key: "your-payu-merchant-key"
      merchant_salt: "your-payu-merchant-salt"
      webhook_secret: "your-payu-webhook-secret"
  
  sms:
    provider: "twilio" # twilio, aws_sns, msg91
    twilio:
      account_sid: "your-twilio-account-sid"
      auth_token: "your-twilio-auth-token"
      from_number: "+1234567890"
    
    aws_sns:
      region: "us-east-1"
      access_key_id: "your-aws-access-key"
      secret_access_key: "your-aws-secret-key"
  
  email:
    provider: "smtp" # smtp, aws_ses, sendgrid
    smtp:
      host: "smtp.gmail.com"
      port: 587
      username: "your-email@example.com"
      password: "your-email-password"
      from_address: "noreply@hmis.bmad-method.com"
    
    aws_ses:
      region: "us-east-1"
      access_key_id: "your-aws-access-key"
      secret_access_key: "your-aws-secret-key"

# Messaging Configuration
messaging:
  kafka:
    brokers:
      - "localhost:9092"
    topic_prefix: "hmis"
    consumer_group: "hmis-core"
    producer:
      max_message_bytes: 1048576 # 1MB
      compression: "snappy"
    consumer:
      auto_offset_reset: "earliest"
      enable_auto_commit: false
      session_timeout: "30s"
      heartbeat_interval: "3s"

# Monitoring & Observability
monitoring:
  prometheus:
    enabled: true
    path: "/metrics"
    port: 9090
  
  tracing:
    enabled: true
    provider: "jaeger" # jaeger, zipkin
    jaeger:
      endpoint: "http://localhost:14268/api/traces"
      service_name: "hmis-core"
  
  logging:
    level: "info" # debug, info, warn, error
    format: "json" # json, text
    output: "stdout" # stdout, file
    file:
      path: "logs/hmis-core.log"
      max_size: 100 # MB
      max_age: 30 # days
      max_backups: 10
      compress: true

# File Storage Configuration
storage:
  local:
    base_path: "./uploads"
    max_file_size: 10485760 # 10MB
  
  s3:
    enabled: false
    bucket: "hmis-uploads"
    region: "us-east-1"
    access_key_id: "your-aws-access-key"
    secret_access_key: "your-aws-secret-key"
    endpoint: ""
    use_ssl: true
  
  encryption:
    enabled: true
    algorithm: "AES-256-GCM"
    key: "your-storage-encryption-key"

# Cache Configuration
cache:
  redis:
    default_ttl: "1h"
    session_ttl: "24h"
    user_ttl: "30m"
    patient_ttl: "1h"
    facility_ttl: "6h"
  
  memory:
    max_size: 1000
    default_ttl: "5m"

# Health Check Configuration
health:
  enabled: true
  path: "/health"
  timeout: "5s"
  interval: "30s"
  checks:
    - "database"
    - "redis"
    - "kafka"
    - "external_apis"

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *" # Daily at 2 AM
  retention_days: 30
  storage:
    type: "local" # local, s3
    path: "./backups"
    compression: true
    encryption: true

# Development Configuration
development:
  debug: true
  mock_services: true
  seed_data: true
  hot_reload: true
  cors_allow_all: true

# Production Configuration
production:
  debug: false
  mock_services: false
  seed_data: false
  hot_reload: false
  cors_allow_all: false
  ssl:
    enabled: true
    cert_file: "/etc/ssl/certs/hmis.crt"
    key_file: "/etc/ssl/private/hmis.key"